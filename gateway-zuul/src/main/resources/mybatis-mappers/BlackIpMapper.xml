<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.gateway.dao.BlackIpDao">
    <resultMap id="BaseResultMap" type="com.cloud.model.gateway.BlackIp">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="ip" jdbcType="VARCHAR" property="ip"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, ip, create_by, create_time, update_by, update_time
  </sql>

    <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from black_ip
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteById" parameterType="java.lang.String">
    delete from black_ip
    where id = #{id,jdbcType=VARCHAR}
  </delete>

    <insert id="insert" parameterType="com.cloud.model.gateway.BlackIp">
    insert into black_ip (id, ip, create_by, 
      create_time, update_by, update_time
      )
    values (#{id,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>

    <insert id="insertSelective" parameterType="com.cloud.model.gateway.BlackIp">
        insert into black_ip
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">
                id,
            </if>
            <if test="ip != null and ip != ''">
                ip,
            </if>
            <if test="createBy != null and createBy != ''">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null and id != ''">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="ip != null and ip != ''">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null and createBy != ''">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null and updateBy != ''">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByIdSelective" parameterType="com.cloud.model.gateway.BlackIp">
        update black_ip
        <set>
            <if test="ip != null and ip != ''">
                ip = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null and createBy != ''">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null and updateBy != ''">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateById" parameterType="com.cloud.model.gateway.BlackIp">
    update black_ip
    set ip = #{ip,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <insert id="batchInsert" parameterType="map">
        insert into black_ip
        (id, ip, create_by, create_time, update_by, update_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id,jdbcType=VARCHAR}, #{item.ip,jdbcType=VARCHAR}, #{item.createBy,jdbcType=VARCHAR},
            #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateBy,jdbcType=VARCHAR},
            #{item.updateTime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>

    <sql id="where">
        <where>
            <if test="ip != null and ip != ''">
                and ip like concat('%', #{ip}, '%')
            </if>
        </where>
    </sql>

    <select id="count" resultType="int">
        select count(*) from black_ip
        <include refid="where"/>
    </select>

    <select id="pageList" resultType="com.cloud.model.gateway.BlackIp">
        select
        <include refid="Base_Column_List"/>
        from black_ip
        <include refid="where"/>
        order by create_time desc
        limit #{start}, #{length}
    </select>

    <select id="selectDistinctIp" resultType="java.lang.String">
        select distinct(ip)
        from black_ip
    </select>

    <select id="findAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from black_ip
    </select>

</mapper>